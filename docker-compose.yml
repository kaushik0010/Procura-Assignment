# docker-compose.yml
version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=procura_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_net

  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.nest
      args:
        APP_NAME: api-gateway
    container_name: api-gateway
    ports:
      - '3000:3000'
    environment:
      - JWT_SECRET=a-very-secret-and-long-key-that-is-secure
    # --- Additions for Hot-Reloading ---
    command: npm run start:dev api-gateway # Runs the dev server
    volumes:
      - .:/usr/src/app                   # Syncs all files
      - /usr/src/app/node_modules        # Excludes node_modules from sync
    # -----------------------------------
    depends_on:
      - products-service
      - orders-service
    networks:
      - app_net

  products-service:
    build:
      context: .
      dockerfile: Dockerfile.nest
      args:
        APP_NAME: products-service
    container_name: products-service
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=procura_db
    # --- Additions for Hot-Reloading ---
    command: npm run start:dev products-service
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    # -----------------------------------
    depends_on:
      - postgres
    networks:
      - app_net

  orders-service:
    build:
      context: .
      dockerfile: Dockerfile.nest
      args:
        APP_NAME: orders-service
    container_name: orders-service
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=procura_db
    # --- Additions for Hot-Reloading ---
    command: npm run start:dev orders-service
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    # -----------------------------------
    depends_on:
      - postgres
      - products-service
    networks:
      - app_net
  
  web-client:
    build:
      context: .
      dockerfile: Dockerfile.next
    container_name: web-client
    ports:
      - '4200:4200'
    # --- Additions for Hot-Reloading ---
    volumes:
      - ./web-client:/usr/src/app # Sync only the web-client folder
      - /usr/src/app/node_modules
    # -----------------------------------
    depends_on:
      - api-gateway
    networks:
      - app_net

volumes:
  postgres_data:

networks:
  app_net: